stages:
  - validate
  - plan
  - apply
  - destroy

variables:
  TF_IMAGE: "$CI_TEMPLATE_REGISTRY_HOST/gitlab-org/terraform-images/releases/1.4:v1.0.0"
  TF_ROOT: IaC/provisioning
  TF_STATE_NAME: default
  SECURE_FILES_DOWNLOAD_PATH: "./terraform"

before_script:
  - curl -s https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/download-secure-files/-/raw/main/installer | sh
  - cd ${TF_ROOT}

image: ${TF_IMAGE}
# resource_group: ${TF_STATE_NAME} # limit the concurrency of jobs to access shared resource

validate:
  stage: validate
  script:
    - gitlab-terraform init
    - gitlab-terraform validate
  cache:
    untracked: true
    paths:
      - ${TF_ROOT}
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - ${TF_ROOT}/main.tf

plan:
  stage: plan
  script:
    - gitlab-terraform plan
  resource_group: ${TF_STATE_NAME}
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - ${TF_ROOT}/main.tf

apply:
  stage: apply
  script:
    - gitlab-terraform plan
    # - gitlab-terraform plan-json
    - gitlab-terraform apply
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - ${TF_ROOT}/main.tf
      # when: manual

destroy:
  stage: destroy
  script:
    - gitlab-terraform destroy -auto-approve
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - ${TF_ROOT}/main.tf
      when: manual
